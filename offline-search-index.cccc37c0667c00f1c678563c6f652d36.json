




















[{"body":"Pandoc is a Haskell library for converting from one markup format to another (https://pandoc.org/).\nWe’ll install it on Ubuntu and convert files from Microsoft Word docx to Markdown.\nDetailed Instructions:  Step 1   Run update command to update package repositories and get latest package information.\nsudo apt update\r  Step 2   Run the install command to install the packages and dependencies.\nsudo apt install pandoc\r  Step 3   Run Pandoc command to check the installation.\npandoc --version\r  Step 4   Run Pandoc command to convert docx to Markdown file and extract images that the docx contains.\npandoc -f docx -t markdown 'Get Data from DB Log - Oracle V2.docx' -o index.md --extract-media=.\r ","categories":"","description":"How to install Pandoc on Ubuntu and convert docx to md.\n","excerpt":"How to install Pandoc on Ubuntu and convert docx to md.\n","ref":"/documentation/buildwebsite/pandoc/","tags":"","title":"1. Install Pandoc and Convert Docx"},{"body":"Hugo is one of the most popular open-source static site generators (https://gohugo.io/).\nWe’ll install it on Ubuntu.\nDetailed Instructions:  Step 1   Run update command to update package repositories and get latest package information.\nsudo apt update\r  Step 2   Run the install command to install the packages and dependencies.\nsudo apt install hugo\r  Step 3   Run hugo command to check the installation.\nhugo version\r  Step 4   Run hugo command to create a new site.\nhugo new site word2md\rThe above will create a new Hugo site in a folder named word2md.\n ","categories":"","description":"How to install Hugo on Ubuntu.\n","excerpt":"How to install Hugo on Ubuntu.\n","ref":"/documentation/buildwebsite/hugo/","tags":"","title":"2. Install Hugo"},{"body":"Docsy is a Hugo theme for creating great technical documentaion sites (https://www.docsy.dev/).\nWe’ll install it on Ubuntu.\nDetailed Instructions:  Step 1   To build or update our site’s CSS resources, we need PostCSS to create the final assets. Web must have a recent version of NodeJS installed on our machine so we can use npm.\nsudo npm install -D autoprefixer\rsudo npm install -D postcss-cli\rsudo npm install -D postcss\r  Step 2   We’ve generate a hugo site named word2md. Now we’ll add the Docs theme as a submodule.\ncd word2md\rgit init\rgit submodule add https://github.com/google/docsy.git themes/docsy\recho 'theme = \"docsy\"' \u003e\u003e config.toml\rgit submodule update --init --recursive\r  Step 3   To build and preview your site locally:.\nhugo server\rBy default, your site will be available at http://localhost:1313/\n ","categories":"","description":"How to install Docsy on Ubuntu.\n","excerpt":"How to install Docsy on Ubuntu.\n","ref":"/documentation/buildwebsite/docsy/","tags":"","title":"3. Install Docsy"},{"body":"The top level menu (the one that appears in the top navigation bar for the entire site) uses our site’s main menu..\nDetailed Instructions:  Step 1   Add menu definition into config.toml which is under the root of our project directory. Then it will look like this:\nbaseURL = \"http://DAYUCS.github.io/\"\rlanguageCode = \"en-us\"\rtitle = \"My New Hugo Site\"\rtheme = \"docsy\"\r[menu]\r[[menu.main]]\ridentifier = \"documentation\"\rname = \"Documentation\"\rpre = \"\u003ci class='fa fa-book'\u003e\u003c/i\u003e\"\rurl = \"/documentation/\"\rweight = 20\r  Step 2   Add _index.md under content/documentation of our project directory. Put following infomation into this file:\n---\rtitle: \"Documentation\"\rweight: 1\rtype: docs\rsummary: A Hugo Site.\r---\r# Contents\rHere are the contents:\r ","categories":"","description":"How to set up the top level menu.\n","excerpt":"How to set up the top level menu.\n","ref":"/documentation/buildwebsite/menu/","tags":"","title":"4. Setup Top-level Menu"},{"body":"We add content for our site under the content root directory of our Hugo site project, either content/ or a language-specific root like conten/en/. Because most technical documentation sites have different sections for different types of content, the Docsy theme comes with the following templates for top-level site sections:\n docs is for pages in our site’s Documentation section. blog is for pages in our site’s Blog. community is for our site’s Community page.  We’ll create a new section under the docs for those documents converted from MS DOCX.\nDetailed Instructions:  Step 1   Create a new directory under content/documentation/ of our Hugo site project. In this case, The new dirctory is RDB.   Step 2   Put a file named _index.md into the directory. The content of this file looks like this:\n---\rtitle: \"Example - RDB Log\"\rweight: 20\rtype: docs\rsummary: How to get data from RDB Log.\r---\r# Get Data from RDB Log\rHow to get data from RDB Log?\r  Step 3   Create sub-directories for each docx file, and put converted files into these directories.   Step 4   For each index.md converted from docx, add Docsy header like this:\n---\rtitle: \"Get Data from Oracle Log\"\rweight: 10\rtype: docs\rdescription: \u003e\rA example to show how to get historical data from Oracle Log.\r---\rYou may find the completed files at https://github.com/DAYUCS/word2md.\n ","categories":"","description":"How to add content.\n","excerpt":"How to add content.\n","ref":"/documentation/buildwebsite/content/","tags":"","title":"5. Add Content"},{"body":"Docsy offers multiple options that let our readers search our site content. In this case, we’ll use Local search with Lunr. This is a Javascript-based search option that lets us index our site and make it searchable without the need for external, server-side search services. This is a good option particularly for smaller or non-public sites.\nDetailed Instructions:  Step 1   Create a Markdown file as content/documentation/search.md. It only needs a title and layout: search, as in the following example:\n---\rtitle: Search Results\rlayout: search\r---\r  Step 2   Enable local search in config.toml:\n[params]\r#Enable offline search with Lunr.js\ralgolia_docsearch = false\rofflineSearch = true\rofflineSearchSummaryLength = 200\rofflineSearchMaxResults = 25\rYou may find the completed files at https://github.com/DAYUCS/word2md.\n  Step 3   Restart our Hugo local server.\n ","categories":"","description":"How to set up site search.\n","excerpt":"How to set up site search.\n","ref":"/documentation/buildwebsite/search/","tags":"","title":"6. Setup Search"},{"body":"Because Hugo renders static websites, we can host our new Hugo website virtually anywhere. Github provides free and fast static hosting over SSL for personal, organization, or project pages directly from a GitHub repository via its GitHub Pages service and automating development workflows and build with GitHub Actions. In this case, we’ll deploy our site on GitHub manually.\nDetailed Instructions:  Step 1   Head over to GitHub and create a new public repository named username.github.io, where username is our username (or organization name) on Github. In this case, username is DAYUCS.\n  Step 2   Clone the new repository:\ncd ~\rgit clone https://github.com/DAYUCS/DAYUCS.github.io\r  Step 3   Stop Hugo local server, and build the site (word2md is our Hugo project directory):\ncd ~\rcd word2md\rhugo -d ../DAYUCS.github.io\rcd ../DAYUCS.github.io\rgit add .\rgit commit -m \"first commit\"\rgit push -u origin master\rGo to https://DAYUCS.github.io to see our website out in the wild.\n ","categories":"","description":"How to publish our site on Github.\n","excerpt":"How to publish our site on Github.\n","ref":"/documentation/buildwebsite/publish/","tags":"","title":"7. Publish on Github (Option)"},{"body":"Contents Here are the contents:\n","categories":"","description":"","excerpt":"Contents Here are the contents:\n","ref":"/documentation/","tags":"","title":"Documentation"},{"body":"Mammonth is designed to convert .docx documents, such as those created by Microsoft Word, Google Docs and LibreOffice, and convert them to HTML and Markdown. Please note that mammoth covert docx by using semantic information in the document, and ignoring other details. Mammonth works fine if you only use styles to semantically mark up your document. Please refer to (https://pypi.org/project/mammoth/) for the features supported by mammonth.\nWe’ll install it on Ubuntu.\nDetailed Instructions:  Step 1   Suppose you have a recent version of NodeJS installed on your machine, so you can use NPM.\nsudo npm install -g mammoth\r  Step 2   Convert docx to markdown with mammoth.\nmammoth --output-format=markdown 'CEV336 Archiving and Recovery.docx' index.md\rOr convert docx to HTML.\nmkdir media\rmammoth --output-dir=./media 'CEV336 Archiving and Recovery.docx'\r ","categories":"","description":"Use mammoth to convert Word document from docx to HTML and Markdown.\n","excerpt":"Use mammoth to convert Word document from docx to HTML and Markdown.\n","ref":"/documentation/mammoth/","tags":"","title":"Mammoth"},{"body":"Office2Md is designed to convert .docx documents, such as those created by Microsoft Word, Google Docs and LibreOffice, and convert them to Markdown. Please refer to (https://gitlab.com/VeryComplexName/opendoc) for the features supported by Office2Md.\nWe’ll install it on Windows 10.\nDetailed Instructions:  Step 1   Suppose you have a recent version of Git installed on your machine. Open Windows PowerShell:\ngit clone https://gitlab.com/VeryComplexName/opendoc.git\rThis will create a folder named opendoc and clone Office2Md into this folder.\n  Step 2   There is file named Office2Md.json in folder opendoc. This file cotains the configuration of the tool. Replace its conten with this:\n{\r\"Toc\": {\r\"TocHeading\": [\r\"TOC Heading\"\r],\r\"Toc1\": [\r\"TOC 1\"\r],\r\"Toc2\": [\r\"TOC 2\"\r],\r\"Toc3\": [\r\"TOC 3\"\r],\r\"Toc4\": [\r\"TOC 4\"\r]\r},\r\"Head\": {\r\"Heading1\": [\r\"Heading1\",\r\"FASEHeading1\"\r],\r\"Heading2\": [\r\"Heading2\",\r\"FASEHeading2\"\r],\r\"Heading3\": [\r\"Heading3\",\r\"FASEHeading3\"\r],\r\"Heading4\": [\r\"Heading4\",\r\"FASEHeading4\"\r],\r\"Heading5\": [\r\"Heading5\",\r\"FASEHeading5\"\r],\r\"Heading6\": [\r\"Heading6\",\r\"FASEHeading6\"\r]\r},\r\"List\": [\r\"ListParagraph\",\r\"FSBulletlistblacklight\",\r\"Bullet1\",\r\"Bullet2\",\r\"Bullet3\"\r],\r\"Common\": [\r\"Normal\",\r\"Emphasis\",\r\"Table Grid\",\r\"Normal (Web)\",\r\"Caption\",\r\"Hyperlink\",\rnull\r],\r\"Image\": {\r\"Prefix\": \"/content\",\r\"UsePrefix\": false,\r\"Embed\" : false,\r\"Convert\" : {\r\"UseConversion\" : false,\r\"Replace\" : [\r{\"From\" : \".emf\", \"To\" : \".jpg\"},\r{\"From\" : \".wmf\", \"To\" : \".jpg\"},\r{\"From\" : \".tif\", \"To\" : \".jpg\"},\r{\"From\" : \".tiff\", \"To\" : \".jpg\"},\r{\"From\" : \".png\", \"To\" : \".jpg\"},\r{\"From\" : \".bmp\", \"To\" : \".jpg\"},\r{\"From\" : \".exif\", \"To\" : \".jpg\"},\r{\"From\" : \".gif\", \"To\" : \".jpg\"},\r{\"From\" : \".ico\", \"To\" : \".jpg\"}\r],\r\"Resize\" : {\r\"UseResize\" : false,\r\"MaxWidth\" : 800,\r\"MaxHeight\" : 0,\r\"DoNotResizeLessThanMax\" : true,\r\"InterpolationMode\" : \"HighQualityBicubic\"\r}\r} },\r\"ReplaceThis\": [\r{\"From\" : \"\\u2013\", \"To\" : \"-\"},\r{\"From\" : \"\\u201c\", \"To\" : \"\\\"\"},\r{\"From\" : \"\\u201d\", \"To\" : \"\\\"\"},\r{\"From\" : \"\\u2022\", \"To\" : \"\"},\r{\"From\" : \"\\u2026\", \"To\" : \"...\"},\r{\"From\" : \"\\u2014\", \"To\" : \"-\"},\r{\"From\" : \"®\", \"To\" : \"\u0026copy;\"},\r{\"From\" : \"\\u2122\", \"To\" : \"\u0026trade;\"},\r{\"From\" : \"°\", \"To\" : \"\u0026deg;\"},\r{\"From\" : \"\\uffff\", \"To\" : \"\"},\r{\"From\" : \"\\u2019\", \"To\" : \"'\"}\r],\r\"Table\" : {\r\"Standardize\" : true\r},\r\"Colors\" : {\r\"UseColors\" : true,\r\"Replace\" : [\r{\"From\" : \"#FFFFFF\", \"To\" : \"#000000\"},\r{\"From\" : \"white\", \"To\" : \"black\"}\r]\r},\r\"Workbook\" : {\r\"SheetHeading\" : {\r\"UseTabName\" : true,\r\"Template\" : \"### {TabName}\"\r}\r},\r\"Pdf\" : {\r\"UsePageNumbers\" : true,\r\"Position\" : \"footer\",\r\"Template\" : \"#### {PageNumber}\" }\r}\r  Step 3   Suppose you have a recent .Net SDK installed on your machine. Under the window opened by Step 1:\ncd opendoc\r.\\Office2Md.ps1 -DocPath \"D:\\Temp\\CEV336 Archiving and Recovery.docx\" -MdDir D:\\Temp\\CE -GithubFlawor -IntoSingleOne\rThis will covert the docx and put the converted files into D:\\Temp\\CE\n  Step 4   Rename the md file as index.md and add Docsy header into it.\n ","categories":"","description":"Use Office2Md to convert Word document from docx to Markdown.\n","excerpt":"Use Office2Md to convert Word document from docx to Markdown.\n","ref":"/documentation/office2md/","tags":"","title":"Office2Md"},{"body":"Build a Web Site with Hugo How to convert MS Word file to markdown format? And how to build a web site with these markdown file?\n","categories":"","description":"","excerpt":"Build a Web Site with Hugo How to convert MS Word file to markdown format? And how to build a web site with these markdown file?\n","ref":"/documentation/buildwebsite/","tags":"","title":"Build Web Site"},{"body":"{width=“2.89375in” height=“1.0604166666666666in”}\nGet Historical Data from Database Log\n介绍各种从Oracle数据库Log中读取交易历史数据的方法，重点展示Oracle Flashback技术的各种功能及用法，探讨在Eximbills产品中使用Oracle Flashback技术的可能性。\nCopyright  2017\nAll rights reserved. This product and related documentation are protected by copyright and distributed under licenses restricting its use, copying, distribution and decompilation. No part of this product or related documentation may be reproduced in any form by any means without the prior written authorization of and its licensors, if any.\n Authors: Dayu Bian Version: 2.0.0 Date: April 7, 2017 Project: Audit Log Report\n :\n File name: Path name: Internal reference: Audit Log Report\n DOCUMENT HISTORY\n [Version]{.underline} [Date]{.underline} [Narrative]{.underline} 1.0.0 September 15, 2011 First Draft 2.0.0 April 7, 2017 Update for Oracle 12c Release 2 and new scenario\n 目录 [1]{.underline} [背景描述]{.underline} 4\n[1.1]{.underline} [历史资料的用途]{.underline} 4\n[1.2]{.underline} [历史资料的保管与获取]{.underline} 4\n[1.3]{.underline} [获取数据库Transaction Log内容的方法]{.underline} 5\n[1.4]{.underline} [数据库审计的专用工具]{.underline} 5\n[2]{.underline} [Oracle Flashback Technology]{.underline} 7\n[2.1]{.underline} [系统设置]{.underline} 7\n[2.1.1]{.underline} [UNDO参数设置]{.underline} 7\n[2.1.2]{.underline} [Flashback Data archive设置]{.underline} 9\n[2.1.3]{.underline} [Flashback Transaction Query设置]{.underline} 11\n[2.1.4]{.underline} [Flashback Transaction设置]{.underline} 11\n[2.2]{.underline} [功能运用]{.underline} 11\n[2.3]{.underline} [在Eximbills中使用Oracle Flashback Technology]{.underline} 12\n[3]{.underline} [小结]{.underline} 14\n[Sign-off Sheet]{.underline} 15\n背景描述 历史资料的用途 交易及非交易数据的历史资料，对Eximbills这样的银行应用系统来说，在很多地方都会被用到。例如——\n  交易资料的核对、查询与报表;\n  审计功能(Audit);\n  对错误交易的更正(Cancellation)。\n  历史资料的保管与获取 一个系统，如何保管历史资料，有两类方法——\n  应用系统自已保管历史资料，在设计时就充分考虑到历史资料的各种可能用途，规划好历史资料的归档、清理等功能。\n  利用数据库Log机制，从Log中获取应用所需的历史资料。\n  前一种方法，其优点在于既不依赖于数据库的Log实现机制，也不依赖于第三方数据库工具，做到了实现一次、各个数据库都通用。但其缺点在于交易处理时需要额外处理\"历史\"资料的读写，相对增加了数据库操作，从而会对交易处理的性能产生一定的负面影响。\n后一种方法，其优缺点恰好与前者相反。由于主流的关系型数据库，在SQL语句被真正落实到磁盘系统之前，都是要先记数据库交易Log，因此Log中实际已记录了数据的历史记录，利用数据库Log机制保管与获取历史资料，不仅可以通过节省交易处理时对数据库的存取来提高性能，而且可利用数据库Log管理机制实现历史资料的归档、清理。但缺点也很明显，这类方法严重依赖于数据库自身所提供的、非标准化的Log存取接口，或第三方软件工具，实现不了各数据库兼容。\n因此，当我们强调应用要兼容各种数据库系统时，多半会采取前一种方法。比如在Eximbills中就有Event表，我们猜测其设计的本意应该是存放Master的历史资料，只不过隨着产品的演进，后来出现了改变Master却不增加Event记录的交易路径，从而给审计功能的实现提了个难题。\n相反，当我们强调客户满意度、面对特定用户、遭遇系统性能瓶颈时，则倾向于使用后一种方法。\n获取数据库Transaction Log内容的方法 众所周知，数据库Log并非是以明码、文本方式存放的，所以想获取其内容需费一些周折。\n已知的获取Log内容的方式有如下这些——\n  IBM InfoSphere Change Data Capture 一种实时的数据复制/转换工具，直接 从各种数据库Log中捕获数据变化，并可对数据进行一定的转换处理，最后写入到目标数据库中。 使用该工具，应用可从目标数据库中以SQL语句获取所需的Log内容。\n  Oracle Golden Gate 与IBM InfoSphere Change Data Capture类似的实时数据复制工具，可直接 从各种数据库Log中捕获数据变化，并可对数据进行一定的转换处理，最后写入到目标数据库中。 使用该工具，应用可从目标数据库中以SQL语句获取所需的Log内容。\n  Oracle LogMiner Oracle数据库自带的Redo Log分析工具，可分析Oracle在线与离线Redo Log，从中得到所有DML(Data Manipulation Language)语句，应用可根据这些SQL语句跟踪数据变化。\n  IBM DB2 Recovery Expert DB2数据恢复工具，其Log分析功能可以从DB2 transaction log中读取并输出数据变化内容。\n  IBM db2ReadLog API DB2自带的C/C++ API，通过调用这些API，C/C++程序可以读取DB2 log内容。\n  Oracle Flashback Technology Oracle闪回技术是Oracle数据库特有的一系列功能项。利用这些功能项，应用可以用SQL语句查询数据历史记录、事务的回滚SQL语句等有用信息。\n  数据库审计的专用工具 如果我们获取数据库Log内容的目的仅仅是为了数据库审计，其实还有两个专门用于数据库安全审计的软件值得考虑：\n  Oracle Audit Vault\n  IBM Security Guardium （以前叫做InfoSphere Guardium)\n  这两个软件可以从多种数据库中抓取Log，提供全方位的数据安全保护与审计。一些非常通用的企业应用，也会结合这些安全审计工具，定制相应的审计功能。\n无庸置疑，这类专用工具当然会提供诸如Before/After之类的报表功能：\n{width=“6.0in” height=“3.25in”}\nOracle Flashback Technology 就Oracle数据库而言，Flashback Technology是系统自带的功能项，无需借助任何其他第三方工具，且使用也非常简便,只要经过一些必要的设置，应用就可以通过SQL语句得到数据库对象过去某个时点的快照。具体的功能描述，请参考Oracle手册：\n[http://docs.oracle.com/database/122/ADFNS/flashback.htm#ADFNS1008]{.underline}\n系统设置 UNDO参数设置 可用show parameters undo语句显示Oracle数据库中UNDO参数的设置。\n{width=“6.0in” height=“5.93125in”}\n其中undo_management及undo_tablespace是安装缺省值，且UNDOTBS1是一个自动扩展的tablespace。而undo_retention的值是28800秒，也就是8小时，表明UNDO信息保留的时长为8小时。必须注意，undo_retention所指定的时长是否有效，实际会受UNDOTBS1的大小限制，由于我们这儿的UNDOTBS1是自动扩展的，所以能保证UNDO信息保留8小时。下图为UNDOTBS1的相关设置：\n{width=“6.0in” height=“7.845833333333333in”}\nFlashback Data archive设置 对于超出undo_retention时长的交易历史记录，Undo Management将会自动从UNDO tablespace中移除。为将交易历史记录保留更长时间，Oracle提供了Flashback Data Archive功能。\n为使用些功能 ，我们首先建立了一个NOLOGGING的tablespace——FBATBS，如下图所示：\n {width=“6.0in” height=“7.845833333333333in”}\n 然后，使用下面SQL语句建立一个缺省的Flashback Archive:\ncreate flashback archive default fla tablespace fbatbs retention 30 day;\n这里的retention指定了交易历史记录在flashback archive中保留的时长，单位可以是天、月、年。\n最后，使用alter table语句一一指定各个需要保留历史记录的表：\nALTER TABLE eximbills.imlc flashback archive;\nFlashback Transaction Query设置 如果我们需要查询在一个数据库事务中做了哪些数据更新，则需要做如下设置：\n ALTER DATABASE ADD SUPPLEMENTAL LOG DATA;\n Flashback Transaction设置 如果我们希望通过调用过程DBMS_FLASHBACK.TRANSACTION_BACKOUT回滚已提交的数据库事务，则需要做如下设置(第一条命令需要数据库以startup mount方式启动，此时数据库在非Open状态下，才能被正确执行)：\n ALTER DATABASE ARCHIVELOG;\nALTER SYSTEM ARCHIVE LOG CURRENT;\nALTER DATABASE ADD SUPPLEMENTAL LOG DATA;\nALTER DATABASE ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;\nALTER DATABASE ADD SUPPLEMENTAL LOG DATA (FOREIGN KEY) COLUMNS;\n 需要注意的是，在真正的银行生产环境中，Eximbills所使用的数据库用户不会是DBA，所以除上述设置项目外，还会涉及到一些数据库权限设置，具体方法请参阅相关文档。\n功能运用 接下去的两幅图，分别显示了Flashback Version Query与Flashback Transaction Query的具体效果：\n{width=“6.0in” height=“3.1347222222222224in”}\n{width=“6.0in” height=“2.651388888888889in”}\n需要注意的是，我们在实际测试中发现，Flashback Version Query有一个短暂的延时，即交易提交后，我们虽可通过Flashback Version Query立即查询到之前的最新版本的栏位versions_endscn与versions_endtime从null变为相应的时间戳，但当前最新版本却不会立刻显现于Flashback Version Query。总之，会有一个短暂的延时。\n在Eximbills中使用Oracle Flashback Technology 从前面的演示效果，我们不难发现，利用Oracle Flashback Version Query，Eximbills可以回溯数据库记录的演进历史，从而可据此实现对历史数据的查询、生成 Audit Log Report、得到Cancellation所需的历史记录。利用Oracle Flashback Transaction Query，我们甚至可以得到Cancellation所需的Undo SQL语句。\n为更为详细地演示Oracle Flashback Technology，我们建立了eximbills.imlc表，具体表结构如下图所示：\n{width=“6.0in” height=“1.7097222222222221in”}\n为了得到Before/After Value Report的效果，我们使用如下SQL建立了一个View:\ncreate view eximbills.imlc_fb_view as\nSELECT versions_startscn, versions_endscn, versions_starttime, versions_endtime, versions_xid, 'B' as versions_operation, lc_no, lc_ccy, lc_amt, lc_event, exim_user, exim_trx_id\nFROM eximbills.imlc versions BETWEEN SCN MINVALUE AND MAXVALUE\nwhere versions_endscn is not null and versions_endscn in (select versions_startscn from eximbills.imlc versions BETWEEN SCN MINVALUE AND MAXVALUE where versions_startscn is not null)\nunion\nSELECT versions_startscn, versions_endscn, versions_starttime, versions_endtime, versions_xid, versions_operation, lc_no, lc_ccy, lc_amt, lc_event, exim_user, exim_trx_id\nFROM eximbills.imlc versions BETWEEN SCN MINVALUE AND MAXVALUE;\n针对上述view，使用如下SQL：\nselect * from eximbills.imlc_fb_view where versions_operation is not null order by lc_no, versions_endtime asc, versions_operation desc;\n则得到下面图中的结果：\n{width=“6.0in” height=“2.6083333333333334in”}\n当然，我们也可以不用如此复杂的SQL语句、转而在程序中直接操纵数据集得到完全相似的结果。\n这里强调一下，在使用Oracle Flashback Technology时，我们需要注意以下几点：\n  Flashback Version Query的响应有一定延时;\n  Flashback Version Query所返回的结果中没有数据库用户信息，因此需要应用在相应表中增加用户信息字段，并在更新数据库资料时同时更新这些字段;\n  Flashback Version Query所返回的结果中不包括直接的SQL Delete信息，但Delete的效果体现在versions_endscn及versions_endtime栏位的值上。\n  小结 有若干种方法从数据库Log中读取交易的历史记录，就Oracle数据库而言，Flashback Technology是数据库自带的功能，只需在数据库上进行一些设置就可打开这些功能，而且其接口形式为SQL语句，故兼容于基于JDBC的各种报表工具，应用方面需要进行的改动也较小，可作为设计Audit Log Report功能的备选方案。\nSign-off Sheet  Internal Reference: Version: Authors: Sign off Required by:\n  [Reviewed by]{.underline} [Position / Comment]{.underline} [Signature]{.underline} [Date]{.underline}\n ","categories":"","description":"A example to show how to get historical data from Oracle Log.\n","excerpt":"A example to show how to get historical data from Oracle Log.\n","ref":"/documentation/rdb/oracle/","tags":"","title":"Get Data from Oracle Log"},{"body":"   EXIMBILLS © Trade Finance SystemCustomer Enterprise Version 3.3.6Archiving and RecoveryJuly 2021     Copyright 2021 © China Systems CorporationAll Rights ReservedThis document is protected by United States Copyright Law and may contain Trade Secrets Information which is proprietary to China Systems Corporation. No part of this document may be copied, photocopied, reproduced, translated, distributed, or reduced to any electronic medium or machine-readable form without prior consent in writing from China Systems Corporation. The information in this document may be used only under the terms and conditions of separate China Systems Corporation license agreements.Information is subject to change without notice. China Systems Corporation makes no warranties, either expressed or implied, with respect to the software herein described as to its quality, performance, including, without limitations to, its fitness for any particular purpose.This document may not reflect total system capability at any subsequent date as a result of development. It is also possible that it may contain references to facilities not available on your computer system. Such references should not be construed to mean that these facilities will necessarily be made available on all types of computer hardware or in all user locations.China Systems Corporation accepts no responsibility or liability for any damages or loss of business or revenue due to the use of this document.All trademarks, registered trademarks and trade names mentioned in this document are the sole property of their respective holders.   ORDER MORE EXIMBILLS DOCUMENTATIONAdditional copies of Documentation are available for purchase from China Systems Corporation or through your local EXIMBILLS Support Office.   CHINA SYSTEMS CORPORATIONComments may be addressed to:corporatedocs@chinasystems.comChina Systems Corporation Ltd.Corner House, 20 Parliament StreetHamilton HM12Bermuda    Table of Contents\nCE Documentation Library\nCE Documentation Library\nCore System Manuals\nCE Utility Reference Manuals\nInstallation Guides\nIntroduction\nSystem Overview\nManual Overview\nUsing the CE Utility\nRunning the CE Utility\nPreparing the CE Utility Files\nAccessing the CE Utility\nNavigating the CE Utility Interface\nGenerating the XML Parameter Files\nBuilding a Product\nArchiving Prerequisites\nArchiving / Backup Database Settings\nData Source Settings\nWebSphere Data Source Settings\nCE Utility Data Source Settings\nLog Settings\nManual Archive Mode\nOverview\nCommon Parameter Settings\nArchive Control Component\nArchive Product Items\nError Codes\nJSP and JS Settings\nArchive Data Function\nParameter Settings\nTransaction Process\nRestore Archived Data Function\nParameter Settings\nTransaction Process\nInquire Archived Data Function\nParameter Settings\nTransaction Process\nAuto Archive Mode\nOverview\nParameter Settings\nTransaction Process\nArchiving through STP\nOverview\nParameter Settings\nTransaction Process\nSample Archiving JSP and JS Files\nIMLC_ArchiveCriteria.jsp\nIMLC_ViewArchive.jsp\nIMLC_ViewArchive_Function.JS\nIMLC_ViewArchive_Event.JS\nGlossary\nGlossary\nCE Documentation Library\nCE Documentation Library\nThe CE Documentation Library lists all available manuals that serve as references on the use of the Customer Enterprise system. The documents are categorized into three groups: Core System Manuals, CE Utility Reference Manuals, and Installation Guides.\nCore System Manuals\nThe CE core system manuals provide details on the setup and configuration of various CE parameters, as well as the implementation of supplementary functionalities supported by the system.\nArchiving and Recovery\nThis manual is a reference to the Archive and Recovery functionality of the CE system. Discussions include the required parameter settings for configuring the relevant functions, as well as examples of how this functionality is used in transaction processes.\nBuilding a Product\nThis manual is a reference to the process of building a product in CE. It provides step-by-step procedures on how to create a basic CE module, transaction function, and product setting; configure parameters; and attach components to generate a working business product.\nData Objects\nThis manual serves as a reference for creating and utilizing data objects in the CE system. The discussions provide details on how to build data object templates and data object entities, and how to attach these to the transaction function screen.\nFrequently Asked Questions\nThis document addresses commonly-asked questions on the Customer Enterprise system. Issues on the browser-side (transaction processing), CE Utility, Security Module, and database, among others, are addressed in the discussions.\nInterfacing CE with CS Eximbills\nThis document discusses the process of interfacing CE with the CS Eximbills (CSX) back office system. Employing the MQ, FTP, and TCP/IP communication protocols, the interface process using the XML format is detailed in this document.\nInterfacing CE with Eximbills Enterprise\nThis document discusses the process of interfacing CE with the Eximbills Enterprise (EE) back office system. Employing the MQ protocol, the interface process for the transfer of data between CE and EE using the XML format is detailed in this document.\nLog Settings\nThis manual provides details on CE logs as well as general instructions on log configuration in CE. This is especially written for the users who are in charge of maintaining the CE system.\nLook and Feel\nThis manual is a reference guide on designing the CE user interface (i.e., the look and feel of the system). Divided into two parts, the manual provides instructions on creating a) the basic L\u0026F style of CE; and b) the CE L\u0026F style that incorporates widgets.\nMulti-Entity\nThis manual is a reference on implementing the Multi-Entity functionality of the CE system. Discussions cover the implementation and application of CE multi-entity.\nMulti-Language\nThis manual discusses the procedures required in setting up the Multi-Language functionality of CE as it is run by Administrator- and Operator-type users. Furthermore, the configuration of certain system and browser elements as well as the setup of related system parameters is explained in step-by-step procedures.\nReports\nThis manual is a comprehensive reference guide on the requirements and processes involved in building business products and functions that generate online reports and documents.\nSecurity and System Maintenance Functions\nThis manual is a comprehensive guide on the security and system maintenance of the CE system. As such, it includes detailed instructions for company and company function management, and user and user function management. Maintenance of key functionalities such as authorization rules, reference numbers, and other services is covered as well. In addition, this document discusses the security concepts in CE to assist users assigned with access rights to the CE Security Module.\nStanding Data Functions\nThis document discusses the functions for the CE standing data that are maintained by operators (e.g., parties, clauses). It includes sections for each function, starting with a brief description of the function, followed by the function input when necessary, and the procedure steps.\nSupplementary Functions\nThis manual is a reference for the CE Utility operator user in configuring parameter, JSP, and transaction function settings to define special or supplementary CE functionalities such as uploading images; sending images and forms to the back-office system; and sending notifications via e-mail, SMS, and widgets.\nSystem Administration Functions\nThis manual is a reference for the default Super Administrator user of the CE Utility in the configuration and maintenance of the CE environment. It discusses in detail user management and parameter management.\nSystem Reference\nThis document serves as a quick reference to the following elements that are used when configuring specific parameters in the CE Utility: global system parameters, system parameters, components, XML Generator items, server side system methods, system JS methods, and APIs.\nCE Utility Reference Manuals\nThe CE Utility Reference set of manuals is a guide on the use of the Customer Enterprise Utility Workbench, or simply CE Utility. This reference provides details on every function or feature in the CE Utility and includes instructions and step-by-step procedures on how to operate or use the function in relation to operating and maintaining the CE system and processing a business transaction.\nA manual is provided for each function group of the CE Utility:\nCE Utility Reference: User Manager Functions, for the functions that belong to the User Manage function group of the CE Utility when accessed by an Administrator or Operator user\nCE Utility Reference: Parameter Manager Functions, for the functions that belong to the Parameter Manage function group of the CE Utility when accessed by an Administrator or Operator user\nCE Utility Reference: System Functions, for the functions that belong to the System Function group of the CE Utility.\nCE Utility Reference: Transaction Functions, for the functions that belong to the Transaction Function group of the CE Utility.\nCE Utility Reference: Product Functions, for the functions that belong to the Product Function group of the CE Utility.\nCE Utility Reference: Maintenance Functions, for the functions that belong to the Maintenance function group of the CE Utility.\nInstallation Guides\nThe CE installation guides are references on the installation and setup processes of the CE system on different application servers and databases.\nInstallation Guide WAS 9 - Oracle 19c\nThis is a reference for installing the CE system on WebSphere Application Server Version 9.0.5.6, with an Oracle 19c database. This includes detailed instructions on configuring the components that are required to successfully run CE.\nIntroduction\nSystem Overview\nManual Overview\nSystem Overview\nTransactions that are old, completed, or canceled consume much disk space that is better used to store future records. Moreover, this slows down transaction processes. While these types of records can simply be deleted, there is no way to retrieve them for inquiry or any subsequent process.\nThe Archiving and Recovery functionality of CE addresses these setbacks. Archiving is the process of transferring transaction records from the Transaction Database to the Backup Database. Recovery, on the other hand, is the process of retrieving archived records from the Backup Database. Recovered records may be used for other operations or inquiry, depending on the bank’s requirements.\nArchived data include master file transaction data and the associated data such as documents, images, GAPI, e-mails, and forms.\nRun by bank operators, the Archiving functions in CE can only be created for transaction modules. These functions are Archive Data, Inquire Archived Data, and Restore Archived Data.\nThere are two modes of archiving:\nManual Archiving, in which records are manually archived per module according to a set of defined criteria. In addition, records received via STP can also be archived through this mode.\nAuto Archiving, in which records are automatically archived by batch according to a set of defined criteria. This is also called Batch Archiving.\nCreating Archiving functions requires specific installation, database, and parameter settings.\nManual Overview\nPurposeThis manual is a reference to the Archive and Recovery functionality of the CE system. Discussions include the required parameter settings for configuring the relevant functions, as well as examples on how this functionality is used in transaction processes.\nThe archiving functions discussed in this document are manual Archiving functions (Archive Data, Restore Archived Data, and Inquire Archived Data), Batch Archive function, and STP Archive function.\nAudienceThis document is written specifically for, but not limited to, the following users:\nConsultants tasked to implement the Archive and Recovery functions in a business module. These users must have sufficient knowledge of running CE Utility functions, building a product, and installing the CE system.\nBank or browser-side users in charge of processing, managing, and maintaining transaction records.\nPrerequisitesSufficient knowledge of building business products is required. Recommended titles before reading this manual are as follows:\nCE Building a Product\nC**E Installation Guide\nC**E System Administration Functions\nCE Utility References\nNOTE:Some features discussed in this manual have been tested and documented based on an older system version. Unless otherwise specified, the overall functionality is the same when recreated in the current version.Using the CE Utility\nRunning the CE Utility\nGenerating the XML Parameters\nBUILDING A PRODUCT\nRunning the CE Utility\nThe Customer Enterprise Utility Workbench, or CE Utility, is the main tool for building parameters in CE.\nPreparing the CE Utility Files\nAlong with the installation files, the CE Utility folder is provided with every CE system release. Prior to using the CE Utility, do the following:\nCopy the CE Utility folder to the local drive.\nDefine the required environment variables.\nMap the CE directories (e.g., CEWeb.war and CE_PARA) to the network drive.\n       Figure 2. 1 CE Utility Folder\nNOTE:The default drives defined in the GEN_XML_ROOTPATH and GEN_WEB_ROOTPATH system parameters areO:\u003c/span\u003e andP:\u003c/span\u003e respectively. These drives, if currently not existing, may be created through a batch file. WhileO:\u003c/span\u003e andP:\u003c/span\u003eare the default drives for CE, these may be set to any other preferred drive available in the network.To enable users to use the CE Utility on their own local machines as clients connecting to the CE server: 1) Install the Java Development Kit (JDK) program; 2) Copy the CE Utility folder; 3) Create theJAVA_HOMEenvironment variable, whichmustpoint to this directory:[Java Home]\\[Installed JDK].For more information on setting up the CE environment, refer to the CE installation guides.For information on the CE Utility functions, refer to theCE Utility Referencemanuals.   Batch File for Creating the CE DrivesThe batch file for creating drives contains the following commands:subst O: /dsubst P: /dsubst O: C:\"\\Program Files\\IBM\\WebSphere\\AppServer\\profiles\\AppSrv01\\installedApps\\DOCS-CEV336Node01Cell\\CE.ear\\CE_PARA\"subst P: C:\"\\Program Files\\IBM\\WebSphere\\AppServer\\profiles\\AppSrv01\\installedApps\\DOCS-CEV336Node01Cell\\CE.ear\\CEWeb.war\"     Accessing the CE Utility\nThe main program for running the CE Utility is the CEUtility.bat file, which is found in the CE Utility folder.\n   Do the following . ..       Run the CEUtility batch program to access the CE Utility.NOTE:A shortcut for the CEUtility batch file can be created on the desktop for easy access.            The logon window of the CE Utility is displayed.To define the database information, click on the Profile button.          In the Database Information dialog box that is displayed, specify the required database details and click on the Save button.          A confirmation message is displayed. Click on the OK button.          NOTE:This new data source setting is saved in theUserInfo.xmlfile in the CE Utility directory.          The relevant username and password may then be specified for logging on the CE Utility.NOTE:For information on defining CE Utility user profiles, refer to theCE System Administration Functionsmanual.          The CE Utility window is displayed.          A function is accessed by opening or double-clicking on the relevant function group and clicking on the function name.NOTE:A user may only access and utilize the functions assigned to him.For more details, refer to theCE Utility Reference:User Manager Functionsdocumentation.      NOTE:It is sometimes necessary to assign a new user name and password when the new database is restored from a backup file. Restoring the backup file restores the original user profiles.The new user profiles for the CE Utility (as well as the CE Security Module) can be defined during the installation process. SQL scripts are run to create these profiles. Refer to the CE installation guides for more information.Navigating the CE Utility Interface\nAfter logging on, the CE Utility window is displayed and parameters may then be configured. The functions used for setting up parameters may be accessed by clicking on the function name on the Function menu or by using the shortcut buttons.\nThe CE Utility interface also provides ways by which parameters can be created, edited, deleted or linked to other operations: menu bar, toolbar buttons, and popup menu.\n       Figure 2. 2 The CE Utility Interface\nNOTE:A function is only displayed, and its corresponding button or menu option enabled, if the user has been given the right to access this function.Some options and functions are only available to Super Administrator users, while others are only accessible to Administrator and Operator users.CE Utility Functions\nThe functions that may be accessed for setting up parameters are organized together into several function groups. The current available function groups and their corresponding functions in the CE Utility are as follows:\nUser Manager Function Group\nThis function group is comprised of functions used for creating, configuring, and exporting Bank-Country group settings; creating new users; and configuring data sources. These functions are:\nBusiness Unit Config\nDataSource Manage\nImport/Export Business Unit\nUser Manage\nParameter Manage Function Group\nThis function group consists of functions used for maintaining system-wide parameters and components. These functions are:\nAP Server\nComponent Manage\nLanguage Configuration\nSystem Parameter\nSystem Parameters\nSystem Function Group\nThis function group consists of functions used for maintaining and facilitating system-wide tasks, operations, and settings. These functions are:\nImage Type Maintain\nOutput Device\nQueue Manager\nSTP Setting\nTime Zone\nTransaction Function Group\nThis function group is comprised of functions used for defining the actual business parameters of transaction functions. These facilitate the maintenance and processes of the business transaction modules. These functions are:\nAmount/Rate Format\nBatch Manage\nClause\nDO Get Data\nExport Setting\nForm\nGAPIs Setting\nGet Data\nImage Control\nMessage Broker Setting\nModule \u0026 Event\nReport Template\nSTPs Mapping\nSub Tasks\nSWIFT Config\nSystem Maintain\nTransaction Function\nTransfer To\nTSU Mapping\nUpload Message Setting\nWeb Service Setting\nWidget Maintain\nProduct Function Group\nThis function group consists of functions that are used for creating and configuring the products to be accessed and used by the customers or end-users. These functions are:\nFields Select\nInbox\nProduct Authorize\nProduct Authorize Setting\nProduct Catalog\nProduct Function Setting\nProduct Item\nMaintenance Function Group\nThis function group is comprised of functions used for facilitating the maintenance of data from CE tables, including fields and error settings. These functions are:\nDB Dictionary\nError Handling\nError Message Config (CE)\nField Conversion\nMulti Language\nPage Dictionary\nXML Generator\nMenu Bar\nThe options on the menu bar are shortcuts to both the common and specific functions and tasks of the system.\n       Figure 2. 3 Menu Bar\n   Menu  Description       File  The available options in the File menu are:New: This is used for creating a new parameter or rule.Save: This is used for saving the created or modified settings.Close Function: This is used for closing the current function window.Connect To: This is used for connecting to another Meta data source.Log Off: This is used for logging off a user that is logged on to the system without exiting the system.Exit: This is used for closing the system window and exiting the system.          Edit  The available options in the Edit menu are:Add: This is used for adding a setting for the selected function or parameter.Delete: This is used for deleting or removing an existing setting.Edit: This is used for editing or modifying existing settings.Copy: This is used for copying or duplicating a selected setting.Find: This is used for finding a specific setting.        Function  The available options in the Function menu are:User Manage, which displays options for running User Manager functionsParameter Manage, which displays options for running Parameter Manager functionsSystem Function, which displays options for running System functionsTransaction Function, which displays options for running Transaction functionsProduct Function, which displays options for running Product functionsMaintenance, which displays options for running Maintenance functions        Tools  The available options in the Tools menu are:Toolbar: When this option is marked, the toolbar is displayed on the CE Utility Workbench window.Function Toolbar: When this option is marked, the function toolbar is displayed on the CE Utility Workbench window. Set User Profile DB Info: This option is used by the Super Administrator user to change the user information that is to be used by the CE Utility for connecting to a database. Window Style: Selecting this option displays a list of CE Utility interface styles: Microsoft Style, Unix Style, Java Style, Classic Style, and Metal Style. The preferred style may be marked accordingly.        Help  The available options in the Help menu are:Help Topics: This is currently not used.Content Help: This is currently not used.About Customer Enterprise: Selecting this option displays the About Customer Enterprise window, which indicates the version information of CE.    Toolbar Buttons\nThere are two kinds of toolbars in the CE Utility: the basic toolbar and the function toolbar.\nBasic Toolbar\nThe following standard buttons are available on the Basic Toolbar of the CE Utility window. These are used for performing the basic and common tasks of the system.\n       Figure 2. 4 Basic Toolbar Buttons\n   Button  Description       New  This button is used for creating a new parameter or rule.          Add  This button is used for adding a setting for the selected function or parameter.        Save  This button is used for storing created or modified settings.        Edit  This button is used for editing or modifying existing settings.        Copy  This button is used for copying or duplicating a selected setting.        Delete  This button is used for deleting or removing an existing setting.        Find  This button is used for finding an existing setting.        Close Function  This button is used for closing a function window.        Help Topic  This button is currently not used.        About Customer Enterprise  This button is used for displaying the version information of Customer Enterprise.    Function Toolbar\nThe buttons on this toolbar are shortcuts to some of the functions that are in the Function Group lists of the CE Utility window. The buttons may also be accessed from the Function menu on the menu bar.\n       Figure 2. 5 Function Toolbar Buttons\n   Button  Description       Set System Parameter  This button is used for accessing the System Parameter function. The function may also be accessed from the Parameter Manage group in the Function menu.          Manage Component  This button is used for accessing the Component Manage function. The function may also be accessed from the Parameter Manage group in the Function menu.        Calculation  This button is currently not used.        Module/Event Configuration  This button is used for accessing the Module \u0026 Event function. The function may also be accessed from the Transaction Function group in the Function menu.        Transaction Function Configuration  This button is used for accessing the Transaction Function. The function may also be accessed from the Transaction Function group in the Function menu.        Form Set  This button is used for accessing the Form function. The function may also be accessed from the Transaction Function group in the Function menu.        Accounting Rule Setting  This button is currently not used.        Field Conversion  This button is used for accessing the Field Conversion function. The function may also be accessed from the Maintenance group in the Function menu.        Get Data  This button is used for accessing the Get Data function. The function may also be accessed from the Transaction Function group in the Function menu.        Reference Number  This button is currently not used.        Output Device  This button is used for accessing the Output Device function. The function may also be accessed from the System Function group in the Function menu.        Function Group  This button is currently not used.        Clause  This button is used for accessing the Clause function. The function may also be accessed from the Transaction Function group in the Function menu.        SWIFT  This button is used for accessing the SWIFT Config function. The function may also be accessed from the Transaction Function group in the Function menu.            Queue Manager  This button is used for accessing the Queue Manager function. The function may also be accessed from the System Function group in the Function menu.          GAPIs Setting  This button is used for accessing the GAPIs Setting function. The function may also be accessed from the Transaction Function group in the Function menu.        Time Zone  This button is used for setting time zone. The function may also be accessed from the System Function group in the Function menu.        STP Setting  This button is used for accessing the STP Setting function. The function may also be accessed from the System Function group in the Function menu.        Message Broker Setting  This button is used for accessing the Message Broker Setting function. The function may also be accessed from the Transaction Function group in the Function menu.        Processing Center  This button is currently not used.        Amount Format Setting  This button is used for accessing the Amount/Rate Format function. The function may also be accessed from the Transaction Function group in the Function menu.        Error Message  This button is used for accessing the Error Message Config (CE) function. The function may also be accessed from the Maintenance group in the Function menu.        Say Total  This button is currently not used.        Holiday  This button is currently not used.        Report  This button is currently not used.        Transfer To  This button is used for accessing the Transfer To function. The function may also be accessed from the Transaction Function group in the Function menu.        Archiving  This button is currently not used.        DB Dictionary  This button is used for accessing the DB Dictionary function. The function may also be accessed from the Maintenance group in the Function menu.        Calculation Constant  This button is currently not used.        XML Generator  This button is used for accessing the XML Generator function. The function may also be accessed from the Maintenance group in the Function menu.        Business Unit  This button is used for accessing the Business Unit Config function. The function may also be accessed from the User Manage group in the Function menu.        User Manager  This button is used for accessing the User Manage function. The function may also be accessed from the User Manage group in the Function menu.        Import/Export Business Unit  This button is used for accessing the Import/Export Business Unit function. The function may also be accessed from the User Manage group in the Function menu.        DataSource Manager  This function is used for accessing the Data Source Manage function. The function may also be accessed from the User Manage group in the Function menu.    Popup Menu\nInside a function or configuration window, options may be provided in the form of a popup menu. This menu is displayed by right-clicking on the relevant window section or on the relevant information.\n       Figure 2. 6 Popup Menu\nIn a popup window, the following options may be made available:\nNew\nAdd\nSave\nEdit\nCopy\nDelete\nFind\nSharable\nHelp\nGenerating the XML Parameter Files\nThe created parameters and business logic are stored in the database as Meta data. For this Meta data to be accessible to the application server (AP) and the web server, it has to be converted to XML - the format used for the communication between the client and the server.\nThe XML files are generated through the XML Generator function of the Maintenance function group in the CE Utility. In most cases, the XML Generator function must be run when a parameter is created or modified using the functions discussed in this document.\n   Do the following . ..       Log on CE Utility as an Administrator or Operator user with rights to the XML Generator function.            The CE Utility window is displayed.Run the XML Generator function from the Maintenance function group.Alternatively, click on the XML Generator button in the function toolbar.          The XML Generator function window is displayed.When there are newly defined or modified parameters, the Meta Data to XML window is also displayed. It lists these parameters for easy selection. In this case, the parameter can be selected from this window and the Apply button clicked. Afterwards, proceed to Step 5.Alternatively, the Meta data or parameter can be manually selected from the main XML Generator window. In this case, click on the Close button of the Meta Data to XML window and proceed to Step 4.          Double-click on the relevant parameter type from the XML Generator window.          Depending on the selected parameter type, an XML configuration window may be displayed. In other cases, the process directly proceeds to Step 6.If the configuration window is displayed, indicate the exact or any additional setting required to generate the relevant XML files. When the specifications are defined click on the Save button          A message is displayed confirming if the XML files are to be generated on the system path.          NOTE:The path of the XML files is defined through the GEN_XML_ROOTPATH Utility Workbench system parameter. This system parameter is configured through the System Parameter function from the Parameter Manage function group.          To save the XML file on the relevant system path, click on the Yes button.To specify another path, click on the No button. On the Save dialog box that is displayed, browse for the path and click on the Save button.          When the relevant XML files are generated, the system displays a confirmation message.NOTE:To hide the information on the paths of the generated XML files, click on the Hide button.          NOTE:Check the indicated path(s) to see the generated XML files.      Building a Product\nWhen building a product in the CE Utility, a few prerequisites are required to be met to make sure that modules or products are built in accordance with the bank’s requirements. One step is the GAP analysis which involves an evaluation of transaction requirements, based on the process flow (e.g., fields, clauses, forms, and interfaces). These are necessary for identifying the fields required for anticipating the required output. When the analysis has been completed, the project team can now begin the process of building a product for the bank’s customers.\nThe following are steps in building a product:\nAccess the CE Utility. To access the CE Utility for building parameters, an Operator user must be created by an Administrator user. This is set up through the User Manager function in the User Manage function group.\nSet up the module and events. This involves naming the module and the projected events that manage the transaction flow within the module. This is set up in the Module and Event function in CE Utility.\nSet up the transaction tables. This involves creating the tables in the DB Dictionary function in CE Utility. There can be different types of tables but only three are mandatory for a CE module: master, ledger, and event.\nNOTE:It is possible to create tables directly into the database by running SQL scripts in the database. In this case, tables can be created before modules and events. It is recommended, however, to use the DB Dictionary for creating tables.Add fields to the transaction table. Fields must be added to a transaction table and field properties defined for the processing and storage of data. These can be done through the DB Dictionary function in CE Utility.\nSet up the transaction functions. This involves creating the functions that correspond to actual business transaction processes. This is done through Transaction Function in the Transaction Function group.\nSet up the transaction parameters. This involves designing the transaction screen, defining attribute and catalog settings, and attaching these parameters to the transaction function. These can be done through Transaction Function in CE Utility.\nCreate the product. The product is the actual functionality accessed and run by the end-user. This process of creating a product involves setting up the product group, product, and product function, and defining product catalog settings.\nDefine authorization rules. Authorization rules are set to further define or set limits for authorizing transactions.\nCalculation. This involves configuring the transaction JS files and defining calculation functions using available system methods. There are three JS files that have to be configured: the Module Base JS file, Event JS file, and Function JS file.\nDefine the settings for the transaction input. Certain functions may be added to aid in the input of data into the transaction. The CE Utility provides options for setting up field conversion rules, lookup buttons, customer reference numbers, clauses, dropdown lists, and data objects for this purpose.\nDefine the settings for the transaction output. Some business transactions involve output generation (i.e., Forms). To make this option available, certain settings must be configured using the functions from the Transaction Function group in CE Utility.\nDefine the security settings in the CE browser. The products and functions created are assigned to an end-user through the browser-side Security and System Maintenance functions.\nNOTE:The browser-side security and system maintenance functions of CE are often collectively called the Security Module.Add the Inbox functionality. Another way of accessing a product or a transaction for further processing is through the Customer Inbox. This can be set up through the Inbox function in CE Utility.\nNOTE:For more information on configuring different parameters in CE, refer to theCE Utility Referencemanuals.Archiving Prerequisites\nArchiving / BACKUP Database Settings\nData Source Settings\nLog Settings\nArchiving / Backup Database Settings\nTransaction records are archived into a separate Backup Database, i.e., the archiving database.\nThis Backup Database must have the same table structure as the physical Transaction Database. When the table structures of the Transaction Database is changed, modify the corresponding table structures in the Backup Database by manually running the relevant SQL statements in this archiving database.\nNOTE:The BackupDatabasesettingsmust be configured in the same application server (WAS).Data Source Settings\nFor the Archiving and Recovery functionality of the CE system, two data sources are required: CEB and CEX.\nThe CEB data source refers to the Backup data source and, thus, points to the physical archiving database. Used for storing archived data, this Backup Database has the same table structure as the Transaction Database.\nThe CEX data source points to the physical Transaction Database, and is essentially the same as the CET data source.\nThe settings for the CEB and CEX data sources are configured in both WebSphere and CE Utility.\nWebSphere Data Source Settings\nThe required WebSphere settings are as follows.\n   Do the following . . .       Define the JDBC provider:Name: Oracle JDBC Driver (XA)Implementation class name: oracle.jdbc.xa.client.OracleXADataSourceClass path: ${ORACLE_JDBC_DRIVER_PATH}/ojdbc6.jarNOTE:Theojdbc6.jarfile is the JDBC driver for Oracle12c.            Define the CEB data source:Name: CEBJNDI Name: CEB          This must point to the Backup Database (e.g., CEBK).Assign CETRX for:Authentication alias for XA recoveryComponent-managed authentication aliasContainer-managed authentication aliasNOTE:TheCETRX usercreatedin the Oracle Database isthe user that is to access the Backup Database. If this is not the same as the transaction database user, theCETRXaliasmustbe set in the Global Security tab, JAAS - J2C Authentication Data page of the WebSphere Application Server Administrative Console.          Define the CEX data source:Name: CEXJNDI Name: CEX          This must point to the Transaction Database (e.g., CEDB).Assign CETRX for:Authentication alias for XA recoveryComponent-managed authentication aliasContainer-managed authentication aliasNOTE:The CETRX user is the same as theCETRX user that is used to access the transaction database.The CEX data source points to the physical Transaction Database, and is essentially the same as the CET data source.      CE Utility Data Source Settings\nLog on the CE Utility as a Super Administrator user and configure the following data source settings.\n   Do the following . . .       Run the DataSource Manage function from the User Manage group.            Check the settings in the Transaction Data Source Manager tab of the DataSource Manage function window.          Modify or create the CEX data source.This data source must point to the Transaction Database, and reference the CEX JNDI setting and CETRX user profile.Make sure to select Archiving as the database type.          Modify or create the CEB data source.This data source must point to the Backup Database, and reference the CEB JNDI setting and CETRX user profile. Make sure to select Backup as the database type.NOTE:CETRX is the CE Transaction Database user that is to access the Backup Database.          XML GENERATION:Log on as an Administrator or Operator user and run the XML Generator function.Generate the XML file for the Data Source Managerparameter.          The updated XML files are generatedonthis path:[Parameter Drive]\u003c/span\u003eCE_SYS\\SYSTThe updatedee_dsmgr.xmlfile containsdetailson the bank groups which data sources have been set.      Log Settings\nConfigure the settings for the Archive logs through this file:\n[CE Parameter Folder]\\CE_SYS\\CE_Log_Config.xml\nEXAMPLE:Archive Logconfigurationsettings:For detailed information on log configuration, refer to the CE Log Settings documentation.\nManual Archive Mode\nOverview\nCOMMON pARAMETER Settings\nARCHIVE DATA FUNCTION\nRestore Archived Data Function\nInquire Archived Data function\nOverview\nWith the Manual Archive mode, the archiving process is performed by module. The archiving functions are grouped and accessed under a particular transaction module. Moreover, only the records that satisfy the defined set of criteria can be accessed and processed under an Archive function.\nThe Manual Archive functions that may be created under a business transaction module are as follows:\nArchiving Data\nInquire Archived Data\nRestore Archived Data\nCommon Parameter Settings\nConfiguring manual Archiving functions involves common prerequisite parameters.\nArchive Control Component\nTrx Manager Archive, a Control component, is used for 2 manual Archiving functions: Archive Data and Restore Archived Data.\nLog on the CE Utility as an Operator user and define the following settings.\n   Do the following . . .       Run the Component Manage function from the Parameter Manage function group.            Access the Control component type.          Check or add the Trx Manager Archive Control component:Component Name: Trx Manager ArchiveComponent Description: Trx Manager ArchiveClass Name: TrxManagerArchiveBusiness Type: Delete Master Mgr      Archive Product Items\nSpecific Archive product items are required to associate a manual Archiving function to the relevant Archiving product.\nAdd the following product items -\nArchive\nRestoreArchive\nInquireArchive\n- to this file:\n[CE Utility Directory]\\ce_params\\Script_XML\\product_item_prar.xml.\n       Figure 4. Product Items for Archiving\nOnce these product Ids are defined in the XML file, add these in the Product Item function. Log on the CE Utility as an Operator user:\n   Do the following . . .       Run the Product Item function from the Product Function group.            Add the Archive item Id:Item ID: ArchiveItem Name: ArchiveItem Desc: ArchiveIs Group: NoPosition: TransactionItem Button: ArchiveType: Delete          Add the RestoreArchive item Id:Item ID: RestoreArchiveItem Name: RestoreArchiveItem Desc: RestoreArchiveIs Group: NoPosition: TransactionItem Button: RestoreArchiveType: Delete          Add the InquireArchive item Id:Item ID: InquireArchiveItem Name: InquireArchiveItem Desc: InquireArchiveIs Group: NoPosition: TransactionItem Button: InquireArchiveType: Inquire      Error Codes\nLog on the CE Utility as an Operator user and define the following error codes for Archiving processes.\n   Do the following . . .       Run the Error Handling function from the Maintenance function group.            In the Catalog tab of the Error Handling function window, access the System node.          Check or add Error Code 000464:Error Code: 000464Error Key: SystemError Level: ErrorError Messge: “Archive failure”          Check or add Error Code 000465:Error Code: 000465Error Key: SystemError Level: ErrorError Messge: “Exception occur when restoring Archive”      JSP and JS Settings\nModify the JSP and JS settings of the relevant transaction module to support the Archiving and Recovery functionality.\nExamples of such settings are provided in Appendix: .\nArchive Data Function\nThis function is used for archiving records.\nNOTE:Archived records are stored in the Backup Database. An archived transaction can be restored through the Restore Archived Data function.Multiple records can be archived at a timeby addingthefollowingcodein themultiCheckfunctionfoundin theSYS_MultiCatalog.jsfile::: ITEM_ID == “Archive” :: ITEM_ID == “RestoreArchive”)Example:function multiCheck(){try {\u003cspan style=\"color:#008080\"\u003e**if \\(ITEM\\_ID == \"Authorize\" :: ITEM\\_ID == \"Authorise\"**\u003c/span\u003e \u003cspan style=\"color:#008080\"\u003e::\u003c/span\u003e \u003cspan style=\"color:#008080\"\u003e**ITEM\\_ID == \"Archive\" :: ITEM\\_ID == \"RestoreArchive\"\\)**\u003c/span\u003e \u003cspan style=\"color:#008080\"\u003e**\\{**\u003c/span\u003e\r\u003cspan style=\"color:#008080\"\u003e**return true;**\u003c/span\u003e\r }}catch (e) {showExcpt(“SYS_MultiCatalog”, e);}}Parameter Settings\nLog on CE Utility as an Operator user and configure the following transaction function and product settings.\nTransaction Function Settings\n   Do the following . . .       Run Transaction Function from the Transaction Function group.            Access the module and function group for which the Archive Data function is to be created.EXAMPLE:Module: Import Letters of CreditFunction Group: System Maintenance.          Create the Archive Data function and set its main program to Trx Manager Archive.EXAMPLE:Function: IMLC Archive DataNOTE:Unmark the following flags:Check for Lock in MasterHold MasterNeed LockRelease          Define the relevant Attribute settings for this function.          Define the relevant Catalog settings for this function.          NOTE:If this manual Archive function is to be used to archive a record that has been received via STP, the STP settings must also be configured through the STP function component.Fordetailson STP Archive functions, refer to:Chapter Six: Archiving through STP      Product Settings\n   Do the following . . .       Access the Product Function Setting function from the Product Function group.            Access the relevant product group and product from the Product Function tab.EXAMPLE:Product Group: ImportProduct: Import Letters of Credit          Select the Archive Data function (e.g., IMLC Archive Data) and assign these settings:Item: ArchiveItem Type: Delete      Transaction Process\n   EXAMPLE       IMLC Archive Data FunctionRun the IMLC Archive Data function.            Select one record and click on the Archive button.Check the Archive Log: All transaction event records - and related data including images, documents, mails, GAPI, etc. - are archived into the Backup Database and deleted from the original Transaction Database.          IMLC Inquire Archive FunctionRun the IMLC Inquire Archive function. The catalog shows the archived record. Select this record and click on the InquireArchive button.          The documents and uploaded images for this record are listed for viewing (through the corresponding View buttons).          Click on the View Historical button.          The events of the transaction record are listed.          Select an event to view the event details.      Restore Archived Data Function\nThis function is used to retrieve transactions from the Backup Database, and add these back to the master file.\nWhen the record to be restored already exists in the Transaction Database, the Restore process may not be performed on this record.\nWhen a record is restored, all related events are also restored in the corresponding tables.\nNOTE:Multiple recordsmay be restored by adding the following code in themultiCheckfunctionfoundin theSYS_MultiCatalog.jsfile::: ITEM_ID == “Archive” :: ITEM_ID == “RestoreArchive”)EXAMPLE:function multiCheck(){try {\u003cspan style=\"color:#008080\"\u003e**if \\(ITEM\\_ID == \"Authorize\" :: ITEM\\_ID == \"Authorise\"**\u003c/span\u003e \u003cspan style=\"color:#008080\"\u003e::\u003c/span\u003e \u003cspan style=\"color:#008080\"\u003e**ITEM\\_ID == \"Archive\" :: ITEM\\_ID == \"RestoreArchive\"\\)**\u003c/span\u003e \u003cspan style=\"color:#008080\"\u003e**\\{**\u003c/span\u003e\r\u003cspan style=\"color:#008080\"\u003e**return true;**\u003c/span\u003e\r }}catch (e) {showExcpt(“SYS_MultiCatalog”, e);}}The system restores multiple records one at a time.After restoring the first selected record, the system provides a Continue button toenable the user torestore the next selected records.Parameter Settings\nLog on CE Utility as an Operator user and configure the following transaction function and product settings.\nTransaction Function Settings\n   Do the following . . .       Run Transaction Function from the Transaction Function group.            Access the module and function group for which the Restore Archived Data function is to be created.EXAMPLE:Module: Import Letters of CreditFunction Group: System Maintenance.          Create the Restore Archived Data function and set its main program to Trx Manager Archive.EXAMPLE:Function: IMLC Restore ArchiveNOTE:Unmark the following flags:Check for Lock in MasterHold MasterNeed LockRelease          Define the relevant Catalog settings for this function.      Product Settings\n   Do the following . . .       Access the Product Function Setting function from the Product Function group.            Access the relevant product group and product from the Product Function tab.EXAMPLE:Product Group: ImportProduct: Import Letters of Credit          Select the Restore Archived Data function (e.g., IMLC Restore Archive) and assign these settings:Item: RestoreArchiveItem Type: Delete      Transaction Process\n Table has a different set of cells in one/more rows. It can’t be shown in Markdown Inquire Archived Data Function\nThe Inquire Archived Data function is used to inquire into records that are stored in the Archive file.\nNOTE:Unlike otherinquiryfunctions, the Inquire Archived Data function retrievesdetailsfrom the Backup Database (i.e., CEB data source) and not from the Transaction Database.Parameter Settings\nLog on CE Utility as an Operator user and configure the following transaction function and product settings.\nTransaction Function Settings\n   Do the following . . .       Run Transaction Function from the Transaction Function group.            Access the module and function group for which the Archive Data is to be created.EXAMPLE:Module: Import Letters of CreditFunction Group: System Maintenance.          Create the Inquire Archived Data function and set its main program to Trx Manager Inq.EXAMPLE:Function: IMLC Inquire Archive          Attach the transaction JSP and template JSP files to this function.          Define the relevant Attribute settings for this function.          Define the relevant Catalog settings for this function.      Product Settings\n   Do the following . . .       Access the Product Function Setting function from the Product Function group.            Access the relevant product group and product from the Product Function tab.EXAMPLE:Product Group: ImportProduct: Import Letters of Credit          Select the Inquire Archived Data function (e.g., IMLC Inquire Archive) and assign these settings:Item: InquireArchiveItem Type: Inquire      Transaction Process\n   EXAMPLE       Through the IMLC Archive Data function, archive one record.            Run the IMLC Inquire Archive function. The catalog shows the archived record. Select this record and click on the InquireArchive button.          The documents and uploaded images for this record are listed for viewing (through the corresponding View buttons).          Click on the View Historical button.          The events of the transaction record are listed.          Select an event to view the event details.      Auto Archive Mode\nOverview\nparameter SEttings\nTransaction Process\nOverview\nWith the Auto Archive mode (or batch mode), records from the relevant module that satisfy a defined set of criteria for the module are automatically archived.\nThe AutoArchiveData batch function is an example of an Auto Archive function.\nNOTE:Each module has its own Archive conditions, which are set through theSub Task functionof the CE Utility.Refer to thesucceedingPar section for moredetailson setting the archive conditions for each module.Parameter Settings\nOne of the tasks under the AutoProcessTaskMgr batch manager, the AutoArchiveData batch function is used to automatically archive transaction records from a particular module that satisfy a defined set of criteria.\nThe parameter settings for this batch function involve settings in the Sub Tasks, AP Server, Import/Export Business Unit, and Batch Manage functions. Log on the CE Utility as an Operator user and configure the following settings.\n   Do the following . . .       Sub TasksRun the Sub Tasks function from the Transaction Function group.            Access the Auto Process Manage subtask type.          Configure the AutoArchiveData settings as required, and make sure to define the following:Task Name, Task Description, Task Component: AutoArchiveDataStart Schedule Type and related settingsNOTE:TheMonth, Week Day, Day,andHourfields are enabled based the Start Schedule Type field setting. Define the values of these fields as well as the Minute component of the archive task schedule accordingly. Refer to theCE Utility Reference:Transaction Functionsdocumentationfor moredetailson these settings.Marking the Start Server flag allows a user to manually start the AutoArchiveData task.The Timer(Hours) field pertains to the duration within which the system archives the records that meet the criteria. If the records are not archived completely within this period, the system terminates the archive process.          AP ServerRun the AP Server function from the Parameter Manage function group.          Define or modify the AP Server settings: Name, Host Name, and IIOP Port.          Import/Export Business UnitRun the Import/Export Business Unit function from the User Manager function group.          In the Import/Export Business Unit window, select the Application Server setting and click on the Import button.          Batch ManageRun the Batch Manage function from the Transaction Function group.          Create or modify the AutoProcessTaskMgr batch manager. Select the correct AP Server Name setting.          Add AutoArchiveData as a subtask of the AutoProcessTaskMgr batch manager.          Sub TasksRun the Sub Tasks function from the Transaction Function group.Access the Archiving subtask type.          Access the relevant module and define the following settings.              Fields: Select PARENT_MAIN_REF This reference number is used to identify the transaction and all its associated data (e.g., images, documents).            In the text area, define the condition by which records from the module are archived.NOTE:The SQL keywords - such asSELECTandFROM- must be in uppercase.          XML GENERATION:Generate the XML file for theArchiveparameter.          Selectallmodules.NOTE:Selecting all modulesis recommended as the systemgenerates XML only for the selected modules anddeletes all previously generated XML forthe unselectedmodules from the Archive folderunder theCE_SYSdirectory.          The following files are generated in[Parameter Drive]\\CE_SYS\\ARCHIVE:autoporcess.xmlmodule_[module short name].xmlmultiPending.xml      Transaction Process\n   EXAMPLE:       Run the Batch Manager function and display the AutoProcessTaskMgr task manager.Start the AutoArchiveData subtask.            Execute this SQL to check which records meet the archiving filter condition.          Three records are archived according to the archiving period and archiving condition specified in the parameters. (These pertain to the Auto Process Manage and Archiving settings defined in the Sub Tasks function.)Check the Archive Log: All transaction event records - and related data including images, documents, mails, GAPI, etc. - are archived into the Backup Database and deleted from the original Transaction Database.          Run the IMLC Inquire Archive function.The three records, along with their associated data, can be accessed through this function.      Archiving through STP\nOverview\nParameter Settings\nTransaction Process\nOverview\nWhen a record in the back-office system is archived, the corresponding record in CE must also be archived.\nThe back-office system sends the transaction’s main reference number and other details to CE. CE, in turn, receives the data through Auto Process function and archives the relevant record through the STP Archive Data function.\nNOTE:The STP Archive Data and themanualArchive Data utilize the samefunction, which main program is Trx Manager Archive. For this function toperformthe STP Archive Data process,theSTP and Attribute transaction component settings are defined.CE receives theSTP messagewhen theInGapiForm message brokeris started.Parameter Settings\nDefining the STP configurations to archive transactions received via STP involves the following parameter settings:\nExtension field\nSTP template and mapping rule\nSTP Archive Data function\nLog on the CE Utility as an Operator user and configure the following settings.\n   Do the following . . .       Extension FieldRun the DB Dictionary function from the Maintenance function group.            Access the Reformat tab on the DB Dictionary function window.          Add an extension field or tag which is to be used for storing module details sent from the back-office system:Name: ModuleDB Type: VARCHARLength: 4          STP MappingRun the STP Mapping function from the Transaction Function group.          Create the Archiving template.EXAMPLE:Template ID and Template Description:ARCHIVE          Add the following Receive tags, which pertain to field details of the transaction from the back-office system:Module, which pertains to the transaction module CEMainRef, which pertains to the main reference number of the transactionCustId, which refers to the Customer or Company Id          Create an STP mapping rule and map the template tags to the relevant fields:CEMainRef: C_MAIN_REFCustId: C_UNIT_CODE Module tag: C_MODULE          STP SettingRun the STP Setting function from the System Function group.          Access the Assign Function tab for the Incoming Message STP type.          Select the relevant message type (i.e., the defined STP template).Assign the function that is to process the STP message through the stp.setFunc method.EXAMPLE:Transaction function: IMLC Archive DataProduct: Import Letters of CreditCode:stp.setFunc(“IMLC Archive Data”, “Import Letters of Credit”)          Transaction FunctionRun Transaction Function from the Transaction Function group.          Access the module and function group for which the Archive Data function is to be created.EXAMPLE:Module: Import Letters of CreditFunction Group: System Maintenance.          Access or create the Archive Data function, which is used for archiving the received STP message.For the required parameter settings, refer to Chapter Four \u003e Archive Data Function \u003e Parameter Settings. EXAMPLE:Function: IMLC Archive DataNOTE:Only one function is used for both STP archiving andmanual archivingprocesses: theIMLC Archive Datafunction, whichutilizes the Trx Manager Archive main program.          Define the STP settings for this function through the STP function component.          EXAMPLE      Transaction Process\n   EXAMPLE:       Send an STP message to CE.            Run the Batch Manager function and display the Message Broker task manager. Make sure that the InGapiForm subtask has been started.Check the STP Log: The STP message is received successfully. Check the Archive Log: All transaction event records - and related data including images, documents, mails, GAPI, etc. - are archived into the Backup Database and deleted from the original Transaction Database.          Run the IMLC Inquire Archive function.The record, along with its associated data, can be accessed through this function.      Sample Archiving JSP and JS Files\nIMLC_ArchiveCriteria.jsp\nIMLC_ViewArchive.jsp\nIMLC_ViewArchive_Function.JS\nIMLC_ViewArchive_Event.JS\nIMLC_ArchiveCriteria.jsp\n(Start of Code)\n\u003c%--\n/**\n* $Id: IMLC_ArchiveCriteria.jsp,v 1.5 2013/12/31 02:41:03 HelenLiu Exp $\n*\n* @module: Import Letters of Credit (IMLC)\n* @function: Archive\n*/\n--%\u003e\n\u003c%@ taglib uri = “/EXIMTAGS” prefix = “EXIMTAGS”%\u003e\n(End of Code)\nIMLC_ViewArchive.jsp\n(Start of Code)\n\u003c%--\n/**\n* $Id: IMLC_ViewArchive.jsp,v 1.6 2013/12/31 02:45:47 Helen Exp $\n*\n* @module: Import Letters of Credit (IMLC)\n* @function: View Archive\n*/\n--%\u003e\n\u003c%@ taglib uri = “/EXIMTAGS” prefix = “EXIMTAGS”%\u003e\n\u003c%@ taglib uri = “/CETAGS” prefix = “CETAGS”%\u003e\n\u003cEXIMTAGS:IncludeFile filePath=\"../JS/IMLC_ViewImpLc_Function.js\"/\u003e\n\u003cEXIMTAGS:IncludeFile filePath=\"../JS/IMLC_ViewImpLc_Event.js\"/\u003e\n\u003cEXIMTAGS:IncludeFile filePath=\"../JS/IMLC_BaseFunc.js\"/\u003e\n\u003cinput name=“PARENT_MAIN_REF” type=“hidden” class=“CHAR_O\"id=“PARENT_MAIN_REF” title=“Parent Main Reference” value=\"\"\u003e\nHide Image(s)\u003c%@ include file=\"../../../../include/SysViewImage.jsp” %\u003e\n\u003cEXIMTAGS:FldConv fldName=“FORM_OF_LC” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:DropDownElement elementType=“CCY”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“TOL_SPEC” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“AVAL_BY” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“TENOR_TYPE” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003c!----\u003e\n\u003cEXIMTAGS:FldConv fldName=“PARTIAL_SHIP” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“TNSHIP” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n \u003cEXIMTAGS:FldConv fldName=\"INCOTERMS\" smType=\"false\" emptyValue=\"\" blankOption=\"TRUE\"/\u003e\r \u003cEXIMTAGS:FldConv fldName=“PRES_PRD_EVENT” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“CONF_INSTR” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:DropDownElement elementType=“CCY”/\u003e\n\u003cEXIMTAGS:DropDownElement elementType=“CCY”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“CHG_FLAG” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“FWD_COVER” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“SDA_FLAG1” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“TENOR_TYPE1” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“SDA_FLAG2” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“TENOR_TYPE2” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“SDA_FLAG3” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“TENOR_TYPE3” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“SDA_FLAG4” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“TENOR_TYPE4” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“SDA_FLAG5” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“TENOR_TYPE5” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“SDA_FLAG6” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n\u003cEXIMTAGS:FldConv fldName=“TENOR_TYPE6” smType=“false” emptyValue=\"\" blankOption=“TRUE”/\u003e\n(End of Code)\nIMLC_ViewArchive_Function.JS\n(Start of Code)\n// $Id: IMLC_ViewArchive_Function.js,v 1.6 2013/12/31 03:01:08 helenliu Exp $\nfunction Get_CURRNT_STATUS(){\ntry {\n// setFldValue(“CURRNT_STATUS”,“Issued LC”);\n}\ncatch (e) {\nshowExcpt(“IMLC_ViewArchive_Function”, e);\n}\n}\nfunction Get_NXT_STATUS(){\ntry {\n// setFldValue(“NXT_STATUS”, “\");\n}\ncatch (e) {\nshowExcpt(“IMLC_ViewArchive_Function”, e);\n}\n}\n(End of Code)\nIMLC_ViewArchive_Event.JS\n(Start of Code)\n// $Id: IMLC_ViewArchive_Event.js,v 1.6 2013/12/31 03:01:08 HelenLiu Exp $\nfunction OnInit(){\ntry {\nif (SYS_FUNCTION_TYPE == “EC” :: SYS_FUNCTION_TYPE == “RE” :: SYS_FUNCTION_TYPE == “IQ” :: SYS_FUNCTION_TYPE == “DM”) {\nSYS_CONFIRM_FLAG = true;\nGetImageList();\n}\nelse {\nif (SYS_ERROR.length == 0) {\nSYS_CONFIRM_FLAG = false;\nInitValue();\n}\n}\n}\ncatch (e) {\nshowExcpt(“IMLC_ViewArchive_Event”, e);\n}\n}\nfunction InitValue(){\ntry {\n}\ncatch (e) {\nshowExcpt(“IMLC_ViewArchive_Event”, e);\n}\n}\nfunction ChkTrxData(){\ntry {\nreturn true;\n}\ncatch (e) {\nshowExcpt(“IMLC_ViewArchive_Event”, e);\n}\n}\nfunction ConfirmTrx(){\ntry {\n//Get_CURRNT_STATUS();\n//Get_NXT_STATUS();\n}\ncatch (e) {\nshowExcpt(“IMLC_ViewArchive_Event”, e);\n}\n}\nfunction InitFldEvt(){\ntry {\n}\ncatch (e) {\nshowExcpt(“IMLC_ViewArchive_Event”, e);\n}\n}\n(End of Code)\nGlossary\nGlossary\na\n   Application Server Server where the CE system is actually deployed and where CE processes the business logic and parameter operations.         Archiving The process of transferring transaction records from the Transaction Database to the Backup Database.       Auto Archiving Mode of archiving in which records are automatically archived by batch according to a set of defined criteria. This is also called Batch Archiving.       Archive Data Function Function used for archiving records.    B\n   Batch Archiving See Auto Archiving.         Business Unit A processing center or a branch unit of a bank-country group.    C\n   CE Utility Short for Customer Enterprise Utility Workbench. This is the main tool for building parameters in CE.         Customer Enterprise (CE) The Eximbills business-to-business (B2B) solution that provides bank customers with a convenient and secure single window for processing and inquiring on all their trade finance, open account, and payments transactions.    D\n   Database An application used for the management, storage, and retrieval of data.         Document Also referred to as form. It is one of the types of output that can be generated in HTML, PDF, WORD, or EXCEL format by a transaction function.    E\n   End-user The actual user running the CE business functions.         Eximbills The flagship product of China Systems, which provides support for advanced e-commerce, open account, and trade-related services.    F\n   Field The smallest unit that can hold data.         Function A unified set of elements, operations, and configurations that produce a target setting, process, and/or output. This typically refers to a CE Utility function or a transaction function.    I\n   Inquire Archived Data Function Function used for inquiring into records that are stored in the Archive file.    M\n   Manual Archiving Mode of archiving in which records are manually archived per module according to a set of defined criteria. In addition, records received via STP can also be archived through this mode.         Meta Data The parameter data, or simply parameters, that are defined in the CE Utility.       Module A group of functions that perform interrelated processes and operate under a general principle or objective (e.g., a system module, which is essential to system processes; a business or transaction module, which pertains to a bank service or product).    P\n   Parameter Any user-controlled configuration that defines a factor or logic within a set of interrelated operations; performs a specific action in a group of processes; or produces a categorical result or setting.         Parameter Files See XML*.*    R\n   Recovery The process of retrieving archived records from the Backup Database.         Restore Archived Data Function Function used for retrieving transactions from the Backup Database, and adding these back to the master file.    S\n   SQL Stands for Structured Query Language. This is a standard interactive and programming language for retrieving and updating data in the database.    X\n   XML Stands for Extensible Markup Language. This is the format used by CE for the communication between the client (browser) and the server.         XML Generator Function The CE Utility function that is used to generate the corresponding XML files for a specific parameter setting.     ","categories":"","description":"Archiving and Recovery on CE.\n","excerpt":"Archiving and Recovery on CE.\n","ref":"/documentation/ce/","tags":"","title":"Archiving and Recovery"},{"body":"Get Data from RDB Log How to get data from RDB Log?\n","categories":"","description":"","excerpt":"Get Data from RDB Log How to get data from RDB Log?\n","ref":"/documentation/rdb/","tags":"","title":"Example - RDB Log"},{"body":"{width=“2.89375in” height=“1.0604166666666666in”}\n简要介绍DB2 V10.1上新出的Time Travel Query技术，探讨在Eximbills产品中使用该技术实现Audit Log相关功能的可能途径。\nCopyright  2012\nAll rights reserved. This product and related documentation are protected by copyright and distributed under licenses restricting its use, copying, distribution and decompilation. No part of this product or related documentation may be reproduced in any form by any means without the prior written authorization of and its licensors, if any.\nAuthors: Dayu Bian\n Version: 1.0.0 Date: September 27, 2012 Project: Audit Log Report\n:\nFile name:\n Path name: Internal reference: Audit Log Report\nDOCUMENT HISTORY\n[Version]{.underline} [Date]{.underline} [Narrative]{.underline}\n 1.0.0 September 26, 2012 First Draft\nContents\n1 背景描述 4\n2 设置步骤 5\n2.1 增加并指定系统时间字段 5\n2.2 创建历史记录表 5\n2.3 关联历史记录表 6\n3 验证Time Travel Query效果 7\n4 小结 8\nSign-off Sheet 9\n背景描述 在上一篇报告[《Get Data from DB Log - Oracle.docx》]{.underline}中，介绍了Oracle数据库的Flashback技术。利用该技术，应用程序与报表工具可以直接使用SQL语句读取到数据库中记录的变化历史资料，从而给Audit Log功能的实现提供了便利。\nIBM的DB2也不甘落后，在今年推出的V10.1上，提供了一个与Oracle Flashback功能相似的技术——Time Travel Query，[这里]{.underline}有相关介绍。\n在具体的设置方法上，DB2与Oracle并不一样。在DB2上，对于需跟踪历史记录的table，采用的是定义相应的时序表（temporal table）的方法。\n在所提供的具体功能上，DB2与Oracle也不尽相同。在DB2上，一共提供了三种类型的时序表——\n  以数据库系统时间为基准的System-period temporal tables(STT);\n  以应用中的业务时间为基准的Application-period temporal tables(ATT);\n  结合STT与ATT为一体的Bitemporal tables。\n  对于应用设计而言，DB2的Time Travel Query在功能上似乎更胜一筹。因为目前我们只对如何实现Audit Log感兴趣，所以本报告将只涉及到STT的使用方法。\n设置步骤 假设有一个名为IMLC的表，现有如下几个简单字段——\n{width=“6.0in” height=“1.6229166666666666in”}\n下面，我们将以此表为基础、分三个步骤设置对STT——\n增加并指定系统时间字段 使用下面的SQL为IMLC增加用于存放系统时间的字段：\nALTER TABLE ADMINISTRATOR.IMLC\nADD COLUMN SYSTEM_START_TIME TIMESTAMP(12) NOT NULL GENERATED ALWAYS AS ROW BEGIN\nADD COLUMN SYSTEM_END_TIME TIMESTAMP(12) NOT NULL GENERATED ALWAYS AS ROW END\nADD COLUMN TRANS_ID TIMESTAMP(12) GENERATED ALWAYS AS TRANSACTION START ID;\n其中\n  SYSTEM_START_TIME为System-period start time，具体含义为：This column is the system time when this row came into existence (the time of the original insert or update operation that created this version of the row)\n  SYSTEM_END_TIME为System-period end time, 具体含义为：This column is the system time when this row was modified with either a　newer version of the row or deleted from the table. The setting of this　timestamp to the following value indicates it is the current version of the row:　9999-12-30-00:00.00\n  TRANS_ID为Transaction start ID，具体含义为：This column is the unique identifier for the transaction that modified or inserted the row; it can be used to find all records affected by the same transaction across multiple tables using Time Travel Query. A database can have many transactions occurring in a relatively short time span (milliseconds). To uniquely identify different transactions, a timestamp value provides subsecond granularity.\n  使用下面的SQL为IMLC指定系统时间字段：\nALTER TABLE ADMINISTRATOR.IMLC\nADD PERIOD SYSTEM_TIME ( SYSTEM_START_TIME, SYSTEM_END_TIME );\n创建历史记录表 使用下面的SQL语句为IMLC创建历史记录表:\nCREATE TABLE IMLC_STT LIKE IMLC;\nALTER TABLE IMLC_STT APPEND ON;\n后一条语句为可选项，但可提高IMLC_STT表的insert性能。\n关联历史记录表 使用下面的SQL将两张表关联起来：\n ALTER TABLE IMLC ADD VERSIONING USE HISTORY TABLE IMLC_STT;\n 至此，有关IMLC的STT设置就全部完成了。\n验证Time Travel Query效果 现在（2012年9月27日），我们对IMLC依次进行如下数据操作：\n  Insert一笔记录，LCNO为LC-0001;\n  Update上笔记录；\n  Delete上笔记录；\n  Insert另一笔记录，LCNO为LC-0002.\n  然后，我们运行如下Time Travel Query语句：\nselect * from IMLC\nfor system_time between timestamp('2012-09-27') and timestamp('9999-12-31');\n下图为运行结果：\n{width=“6.0in” height=“0.6722222222222223in”}\n显然，上述结果与Oracle Flashback Version Query基本上是类似的,DELETE的结果也反映在SYSTEM_END_TIME字段上（Oracle上相应字段为versions_endtime）；但在版本记录被删除或修改之前，DB2上的值为9999-12-30，而Oracle上则是null。\n小结 DB2 V10.1上的Time Travel Query功能，与Oracle上的Flashback Technology极其相似，都是只需在数据库上进行一些设置就可打开这些功能；而且，其接口形式都为SQL，故兼容于基于JDBC的各种报表工具，应用方面需要进行的改动也较小，可做为设计Audit Log Report功能的备选方案。\nSign-off Sheet Internal Reference:\n Version: Authors: Sign off Required by:\n[Reviewed by]{.underline} [Position / Comment]{.underline} [Signature]{.underline} [Date]{.underline}\n ","categories":"","description":"A example to show how to get historical data from DB2 Log.\n","excerpt":"A example to show how to get historical data from DB2 Log.\n","ref":"/documentation/rdb/db2/","tags":"","title":"Get Data from DB2 Log"},{"body":"   Heading 1 Heading 2 Heading 3     Content 1,1     Content 2,1  Content 2, 3   Log on CE Utility as an Administrator or Operator user with rights to the XML Generator function  Content 3,3   The CE Utility window is displayed.  Content 4,3    ","categories":"","description":"Markdown Table Example.\n","excerpt":"Markdown Table Example.\n","ref":"/documentation/table/","tags":"","title":"Table Example"},{"body":"{width=“2.89375in” height=“1.0604166666666666in”}\n简要介绍MS SQL Server 2008上出现的Change Data Capture功能，探讨在Eximbills产品中使用该技术实现Audit Log相关功能的可能途径。\nCopyright  2012\nAll rights reserved. This product and related documentation are protected by copyright and distributed under licenses restricting its use, copying, distribution and decompilation. No part of this product or related documentation may be reproduced in any form by any means without the prior written authorization of and its licensors, if any.\nAuthors: Dayu Bian\n Version: 1.0.0 Date: September 29, 2012 Project: Audit Log Report\n:\nFile name:\n Path name: Internal reference: Audit Log Report\nDOCUMENT HISTORY\n[Version]{.underline} [Date]{.underline} [Narrative]{.underline}\n 1.0.0 September 28, 2012 First Draft\nContents\n1 背景描述 4\n2 设置步骤 5\n2.1 Enable Change Data Capture for the Database exim 5\n2.2 Enable Change Data Capture for the Table IMLC 5\n3 验证效果 8\n4 小结 10\nSign-off Sheet 11\n背景描述 在上两篇报告[《Get Data from DB Log - Oracle.docx》]{.underline}、《[Get Data From DB Log – DB2]{.underline}》中，介绍了Oracle数据库的Flashback技术及DB2 V10的Time Travel Query功能。利用这些技术，应用程序与报表工具可以直接使用SQL语句读取到数据库中记录的变化历史资料，从而给Audit Log功能的实现提供了便利。\n至于MS SQL Server，自2008版本起，推出了一个名为Change Data Capture的功能，同样也是在后台通过读取数据库日志的方法、自动生成数据库中记录的变化历史资料。[这儿]{.underline}有相关介绍，当中有一幅图（如下）描述了其基本实现原理。\n{width=“2.4784722222222224in” height=“4.157638888888889in”}\n设置步骤 假设在数据库exim下有一个名为dbo.IMLC的表，现有如下几个简单字段——\n{width=“4.042230971128609in” height=“1.458536745406824in”}\n下面，我们将以此表为基础、分两个步骤设置Change Data Capture——\nEnable Change Data Capture for the Database exim 执行以下Transact-SQL：\n USE exim\nGO\nEXEC sys.sp_cdc_enable_db\nGO\n Enable Change Data Capture for the Table IMLC 执行以下Transact-SQL:\n USE exim\nGO\nEXEC sys.sp_cdc_enable_table\n@source_schema = N'dbo',\n@source_name = N'IMLC',\n@role_name = NULL,\n@supports_net_changes = 1\nGO\n 至此，有关IMLC的Data Change Capture设置就全部完成了，系统还为此自动生成了两个Table-valued函数及一个Change table:\n{width=“5.386169072615923in” height=“5.980002187226597in”}\n{width=“6.0in” height=“3.2625in”}\n验证效果 现在（2012年9月29日），我们对IMLC依次进行如下数据操作：\n  Insert一笔记录，LCNO为LC-0001;\n  Update上笔记录；\n  Delete上笔记录；\n  Insert另一笔记录，LCNO为LC-0002.\n  然后，我们运行如下Transact-SQL：\nUSE exim;\nGO\nDECLARE @begin_time datetime, @end_time datetime, @from_lsn binary(10), @to_lsn binary(10);\n-- Obtain the beginning of the time interval.\nSET @begin_time = GETDATE() -1;\n-- Obtain the end of the time interval.\nSET @end_time = GETDATE();\n-- Map the time interval to a change data capture query range.\nSET @from_lsn = sys.fn_cdc_map_time_to_lsn('smallest greater than or equal', @begin_time);\nSET @to_lsn = sys.fn_cdc_map_time_to_lsn('largest less than or equal', @end_time);\n-- Return the net changes occurring within the query window.\nSELECT * FROM cdc.fn_cdc_get_all_changes_dbo_IMLC(@from_lsn, @to_lsn, 'all');\n得到的结果如下图：\n{width=“6.0in” height=“0.9104166666666667in”}\n其中，__$operation的值的含义为：\n 2 – Insert\n4 – Update (一次Update产生before/after两笔记录，由__$update_mask区分)\n1 – Delete\n 此外，通过JDBC/SQL直接访问Change Table也可得到与上面类似的结果：\n{width=“6.0in” height=“2.088888888888889in”}\n小结 MS SQL Server上的Change Data Capture功能，与Oracle上的Flashback Technology、DB2上的Time Travel Query极其相似，都是只需在数据库上进行一些设置就可打开这些功能；而且，其接口形式都为SQL，故兼容于基于JDBC的各种报表工具，应用方面需要进行的改动也较小，可做为设计Audit Log Report功能的备选方案。\nSign-off Sheet Internal Reference:\n Version: Authors: Sign off Required by:\n[Reviewed by]{.underline} [Position / Comment]{.underline} [Signature]{.underline} [Date]{.underline}\n ","categories":"","description":"A example to show how to get historical data from MS SQL Server Log.\n","excerpt":"A example to show how to get historical data from MS SQL Server Log.\n","ref":"/documentation/rdb/mssql/","tags":"","title":"Get Data from MS SQL Server Log"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/","tags":"","title":"Categories"},{"body":"","categories":"","description":"","excerpt":"","ref":"/","tags":"","title":"My New Hugo Site"},{"body":"","categories":"","description":"","excerpt":"","ref":"/documentation/search/","tags":"","title":"Search Results"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/","tags":"","title":"Tags"}]